{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/**\n *  This implementation should run on localhost development session or in webpage mode\n*/\nexport class StoreServiceImplDev {\n  load(key) {\n    return new Promise((resolve, reject) => {\n      // timeout set to simulate ngModel problem and chrome storage synce delay\n      //setTimeout(() => {\n      let result = localStorage.getItem(key).then();\n      if (result !== null) {\n        this.loadingSimulation().then(result => {\n          resolve(result);\n        });\n      } else {\n        reject(\"No wanted data found in localstorage\");\n      }\n      //}, 1000);\n    });\n  }\n\n  save(key, content) {\n    return new Promise((resolve, reject) => {\n      // timeout set to simulate ngModel problem and chrome storage synce delay\n      if (content !== undefined) {\n        localStorage.setItem(key, JSON.stringify(content));\n        resolve(\"dummy\");\n      } else {\n        reject(\"No data passed into local storage\");\n      }\n    });\n  }\n  handleJsonNull(key) {\n    let result = localStorage.getItem(key);\n    return result === null ? \"{}\" : result;\n  }\n  loadingSimulation(key) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        return localStorage.getItem(key);\n      }, 1000);\n    });\n  }\n}\nStoreServiceImplDev.ɵfac = function StoreServiceImplDev_Factory(t) {\n  return new (t || StoreServiceImplDev)();\n};\nStoreServiceImplDev.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreServiceImplDev,\n  factory: StoreServiceImplDev.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA;;;AAOA,OAAM,MAAOA,mBAAmB;EAErBC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC;MACA;MACI,IAAIC,MAAM,GAASC,YAAY,CAACC,OAAO,CAACN,GAAG,CAAC,CAACO,IAAI,EAAE;MACnD,IAAIH,MAAM,KAAK,IAAI,EAAE;QACjB,IAAI,CAACI,iBAAiB,EAAE,CACnBD,IAAI,CAAEH,MAAY,IAAI;UACnBF,OAAO,CAACE,MAAM,CAAC;QACnB,CAAC,CAAC;OACT,MAAM;QACHD,MAAM,CAAC,sCAAsC,CAAC;;MAEtD;IACJ,CAAC,CAAC;EACN;;EAEOM,IAAI,CAACT,GAAW,EAAEU,OAAa;IAClC,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC;MACA,IAAIO,OAAO,KAAKC,SAAS,EAAE;QACvBN,YAAY,CAACO,OAAO,CAACZ,GAAG,EAAEa,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;QAClDR,OAAO,CAAC,OAAO,CAAC;OACnB,MAAM;QACHC,MAAM,CAAC,mCAAmC,CAAC;;IAEnD,CAAC,CAAC;EACN;EAEQY,cAAc,CAACf,GAAY;IAC/B,IAAII,MAAM,GAAmBC,YAAY,CAACC,OAAO,CAACN,GAAG,CAAC;IACtD,OAAOI,MAAM,KAAK,IAAI,GAAG,IAAI,GAAGA,MAAM;EAC1C;EAEQI,iBAAiB,CAACR,GAAY;IAClC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnCa,UAAU,CAAC,MAAK;QACZ,OAAOX,YAAY,CAACC,OAAO,CAACN,GAAG,CAAC;MACpC,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACN;;AA1CSF,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAmB,SAAnBnB,mBAAmB;EAAAoB,YAFf;AAAM","names":["StoreServiceImplDev","load","key","Promise","resolve","reject","result","localStorage","getItem","then","loadingSimulation","save","content","undefined","setItem","JSON","stringify","handleJsonNull","setTimeout","factory","providedIn"],"sourceRoot":"","sources":["/home/kovo/Documents/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.dev.ts"],"sourcesContent":["// angular imports\nimport { Injectable } from \"@angular/core\";\n\n// my imports\nimport { StoreService } from \"./store.service\";\n\n/** \n *  This implementation should run on localhost development session or in webpage mode\n*/\n\n@Injectable({\n    providedIn : 'root'\n})\nexport class StoreServiceImplDev implements StoreService {\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            // timeout set to simulate ngModel problem and chrome storage synce delay\n            //setTimeout(() => {\n                let result : any = localStorage.getItem(key).then();\n                if (result !== null) {\n                    this.loadingSimulation()\n                        .then((result : any) => {\n                            resolve(result);\n                        })\n                } else {\n                    reject(\"No wanted data found in localstorage\");\n                } \n            //}, 1000);\n        });\n    }\n\n    public save(key: string, content : any) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            // timeout set to simulate ngModel problem and chrome storage synce delay\n            if (content !== undefined) {\n                localStorage.setItem(key, JSON.stringify(content));\n                resolve(\"dummy\");\n            } else {\n                reject(\"No data passed into local storage\")\n            }\n        });\n    }\n\n    private handleJsonNull(key : string) : string {\n        let result : string | null = localStorage.getItem(key);\n        return result === null ? \"{}\" : result;\n    }\n\n    private loadingSimulation(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => { \n            setTimeout(() => {\n                return localStorage.getItem(key);\n            }, 1000);\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
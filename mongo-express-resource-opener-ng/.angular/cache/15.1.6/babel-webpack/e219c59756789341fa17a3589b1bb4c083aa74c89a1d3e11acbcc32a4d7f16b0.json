{"ast":null,"code":"export class SettingDecoratorConverterBase {\n  storeConversion(content) {\n    if (content === undefined) {\n      return undefined;\n    }\n    return this.mapForNgModel(content);\n  }\n  modelConversion(content) {\n    if (content === undefined) {\n      return undefined;\n    }\n    return this.mapForStore(content);\n  }\n}","map":{"version":3,"mappings":"AAQA,OAAM,MAAiBA,6BAA6B;EAMzCC,eAAe,CAACC,OAAuB;IAC1C,IAAIA,OAAO,KAAKC,SAAS,EAAE;MACvB,OAAOA,SAAS;;IAEpB,OAAO,IAAI,CAACC,aAAa,CAACF,OAAO,CAAC;EACtC;EAEOG,eAAe,CAACH,OAAmB;IACtC,IAAIA,OAAO,KAAKC,SAAS,EAAE;MACvB,OAAOA,SAAS;;IAEpB,OAAO,IAAI,CAACG,WAAW,CAACJ,OAAO,CAAC;EACpC","names":["SettingDecoratorConverterBase","storeConversion","content","undefined","mapForNgModel","modelConversion","mapForStore"],"sourceRoot":"","sources":["/home/kovo/Documents/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/decorators/setting/setting.decorator.converter.ts"],"sourcesContent":["export interface SettingDecoratorConverter<TYPE_IN_NG, TYPE_IN_STORE> {\n    // in implementing class, return null if You do not want conversion in some direction\n    // model -> settings store\n    modelConversion : (content : TYPE_IN_NG) => TYPE_IN_STORE | undefined; \n    // settings store -> model\n    storeConversion : (content : TYPE_IN_STORE) => TYPE_IN_NG | undefined;\n}\n\nexport  abstract class SettingDecoratorConverterBase<TYPE_IN_NG, TYPE_IN_STORE> \n        implements SettingDecoratorConverter<TYPE_IN_NG, TYPE_IN_STORE> \n{\n    protected abstract mapForNgModel(content : TYPE_IN_STORE) : TYPE_IN_NG;\n    protected abstract mapForStore(content : TYPE_IN_NG) : TYPE_IN_STORE;\n\n    public storeConversion(content : TYPE_IN_STORE) : TYPE_IN_NG | undefined {\n        if (content === undefined) {\n            return undefined;\n        }\n        return this.mapForNgModel(content);\n    }\n\n    public modelConversion(content: TYPE_IN_NG) : TYPE_IN_STORE | undefined {\n        if (content === undefined) {\n            return undefined;\n        }\n        return this.mapForStore(content);\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
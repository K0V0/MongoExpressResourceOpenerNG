{"ast":null,"code":"import _defineProperty from \"/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n///<reference types=\"chrome\"/>\nimport * as i0 from \"@angular/core\";\n/**\n *  This implementation runs when extension is built and packed\n*/\nexport class StoreServiceImplProd {\n  constructor() {}\n  load(key) {\n    return new Promise((resolve, reject) => {\n      chrome.storage.sync.get(key, data => {\n        if (Object.keys(data).length === 0 && data.constructor === Object) {\n          reject('No data returned by localStorage');\n        } else {\n          resolve(data[key]);\n        }\n      });\n    });\n  }\n  save(key, content) {\n    if (key === undefined || content === undefined) {\n      return;\n    }\n    chrome.storage.sync.set({\n      [key]: content\n    });\n  }\n}\n_defineProperty(StoreServiceImplProd, \"\\u0275fac\", function StoreServiceImplProd_Factory(t) {\n  return new (t || StoreServiceImplProd)();\n});\n_defineProperty(StoreServiceImplProd, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreServiceImplProd,\n  factory: StoreServiceImplProd.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAAA;;AAKA;;;AAOA,OAAM,MAAOA,oBAAoB;EAE7BC,eAAe;EAERC,IAAI,CAACC,GAAwB;IAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnCC,MAAM,CAACC,OAAO,CAACC,IAAI,CAACC,GAAG,CAACP,GAAG,EAAEQ,IAAI,IAAG;QAChC,IAAIC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,MAAM,KAAK,CAAC,IAAIH,IAAI,CAACV,WAAW,KAAKW,MAAM,EAAE;UAC/DN,MAAM,CAAC,kCAAkC,CAAC;SAC7C,MAAM;UACHD,OAAO,CAACM,IAAI,CAACR,GAAG,CAAC,CAAC;;MAE1B,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEOY,IAAI,CAACZ,GAAY,EAAEa,OAAa;IACnC,IAAIb,GAAG,KAAKc,SAAS,IAAID,OAAO,KAAKC,SAAS,EAAE;MAC5C;;IAEJV,MAAM,CAACC,OAAO,CAACC,IAAI,CAACS,GAAG,CAAC;MAAE,CAACf,GAAG,GAAGa;IAAO,CAAE,CAAC;EAC/C;;gBArBShB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAAA,gBAApBA,oBAAoB;SAApBA,oBAAoB;EAAAmB,SAApBnB,oBAAoB;EAAAoB,YAFhB;AAAM","names":["StoreServiceImplProd","constructor","load","key","Promise","resolve","reject","chrome","storage","sync","get","data","Object","keys","length","save","content","undefined","set","factory","providedIn"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.prod.ts"],"sourcesContent":["///<reference types=\"chrome\"/>\n\nimport { Injectable } from \"@angular/core\";\nimport { StoreService } from \"./store.service\";\n\n/** \n *  This implementation runs when extension is built and packed\n*/\n\n@Injectable({\n    providedIn : 'root'\n})\nexport class StoreServiceImplProd implements StoreService {\n\n    constructor() {}\n\n    public load(key : string | undefined) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            chrome.storage.sync.get(key, data => {\n                if (Object.keys(data).length === 0 && data.constructor === Object) {\n                    reject('No data returned by localStorage');\n                } else {\n                    resolve(data[key]);\n                }\n            });\n        });\n    }\n\n    public save(key : string, content : any) : void {\n        if (key === undefined || content === undefined) {\n            return;\n        }\n        chrome.storage.sync.set({ [key]: content });\n    }\n\n    //TODO do not storing value as undefined => deleted value instead\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
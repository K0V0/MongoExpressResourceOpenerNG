{"ast":null,"code":"import _defineProperty from \"/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n///<reference types=\"chrome\"/>\nimport * as i0 from \"@angular/core\";\nexport class StoreService {\n  constructor() {}\n  load(key) {\n    return new Promise((resolve, reject) => {\n      chrome.storage.sync.get(key, data => {\n        if (Object.keys(data).length === 0 && data.constructor === Object) {\n          reject('no data returned by localStorage');\n        } else {\n          console.log('settings get');\n          console.log(data);\n          resolve(data[key]);\n        }\n      });\n    });\n  }\n  save(key, content) {\n    console.log('settings save');\n    console.log(content);\n    if (content === undefined) {\n      return;\n    }\n    chrome.storage.sync.set({\n      [key]: content\n    });\n  }\n}\n_defineProperty(StoreService, \"\\u0275fac\", function StoreService_Factory(t) {\n  return new (t || StoreService)();\n});\n_defineProperty(StoreService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreService,\n  factory: StoreService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAAA;;AAQA,OAAM,MAAOA,YAAY;EAErBC,eAAe;EAERC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnCC,MAAM,CAACC,OAAO,CAACC,IAAI,CAACC,GAAG,CAACP,GAAG,EAAEQ,IAAI,IAAG;QAChC,IAAIC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,MAAM,KAAK,CAAC,IAAIH,IAAI,CAACV,WAAW,KAAKW,MAAM,EAAE;UAC/DN,MAAM,CAAC,kCAAkC,CAAC;SAC7C,MAAM;UACHS,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3BD,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;UACjBN,OAAO,CAACM,IAAI,CAACR,GAAG,CAAC,CAAC;;MAE1B,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEOc,IAAI,CAACd,GAAY,EAAEe,OAAa;IACnCH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;IACpB,IAAIA,OAAO,KAAKC,SAAS,EAAE;MACvB;;IAEJZ,MAAM,CAACC,OAAO,CAACC,IAAI,CAACW,GAAG,CAAC;MAAE,CAACjB,GAAG,GAAGe;IAAO,CAAE,CAAC;EAC/C;;gBAzBSlB,YAAY;mBAAZA,YAAY;AAAA;AAAA,gBAAZA,YAAY;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;EAAAsB,YAFR;AAAM","names":["StoreService","constructor","load","key","Promise","resolve","reject","chrome","storage","sync","get","data","Object","keys","length","console","log","save","content","undefined","set","factory","providedIn"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.ts"],"sourcesContent":["///<reference types=\"chrome\"/>\n\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n    providedIn : 'root'\n})\nexport class StoreService {\n\n    constructor() {}\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            chrome.storage.sync.get(key, data => {\n                if (Object.keys(data).length === 0 && data.constructor === Object) {\n                    reject('no data returned by localStorage');\n                } else {\n                    console.log('settings get');\n                    console.log(data);\n                    resolve(data[key]);\n                }\n            });\n        });\n    }\n\n    public save(key : string, content : any) : void {\n        console.log('settings save');\n        console.log(content);\n        if (content === undefined) {\n            return;\n        }\n        chrome.storage.sync.set({ [key]: content });\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
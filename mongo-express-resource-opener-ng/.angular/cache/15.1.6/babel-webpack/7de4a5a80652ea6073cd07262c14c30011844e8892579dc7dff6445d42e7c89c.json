{"ast":null,"code":"///<reference types=\"chrome\"/>\nimport { StoreServiceImplDev } from \"../services/store.service.impl.dev\";\nimport { StoreServiceImplProd } from \"../services/store.service.impl.prod\";\nexport class EnviromentUtil {\n  static runningAt() {\n    let getBackgroundPage = chrome?.extension?.getBackgroundPage;\n    if (getBackgroundPage) {\n      return getBackgroundPage() === window ? RuntimeEnviroment.BACKGROUND : RuntimeEnviroment.POPUP;\n    }\n    return chrome?.runtime?.onMessage ? RuntimeEnviroment.CONTENT : RuntimeEnviroment.WEB;\n  }\n  static getStoreService() {\n    return EnviromentUtil.runningAt() === RuntimeEnviroment.WEB ? new StoreServiceImplDev() : new StoreServiceImplProd();\n  }\n}\nexport var RuntimeEnviroment;\n(function (RuntimeEnviroment) {\n  RuntimeEnviroment[RuntimeEnviroment[\"BACKGROUND\"] = 0] = \"BACKGROUND\";\n  RuntimeEnviroment[RuntimeEnviroment[\"POPUP\"] = 1] = \"POPUP\";\n  RuntimeEnviroment[RuntimeEnviroment[\"CONTENT\"] = 2] = \"CONTENT\";\n  RuntimeEnviroment[RuntimeEnviroment[\"WEB\"] = 3] = \"WEB\";\n})(RuntimeEnviroment || (RuntimeEnviroment = {}));\nexport var SettingsNames;\n(function (SettingsNames) {\n  SettingsNames[\"AUTO_SUBMIT_RESOURCE_ID\"] = \"autoSubmitResourceId\";\n  SettingsNames[\"CHECK_ON_ALL_ENVIROMENTS\"] = \"checkOnAllEnviroments\";\n  SettingsNames[\"AVAILABLE_ENVIROMENTS\"] = \"availableEnviromets\";\n  SettingsNames[\"CURRENT_ENVIROMENT\"] = \"currentEnviroment\";\n  SettingsNames[\"ENVIROMENTS\"] = \"enviroments\";\n})(SettingsNames || (SettingsNames = {}));","map":{"version":3,"mappings":"AAAA;AAGA,SAASA,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,oBAAoB,QAAQ,qCAAqC;AAG1E,OAAM,MAAOC,cAAc;EAEhB,OAAOC,SAAS;IACnB,IAAIC,iBAAiB,GAAGC,MAAM,EAAEC,SAAS,EAAEF,iBAAiB;IAC5D,IAAIA,iBAAiB,EAAC;MAClB,OAAOA,iBAAiB,EAAE,KAAKG,MAAM,GAAGC,iBAAiB,CAACC,UAAU,GAAGD,iBAAiB,CAACE,KAAK;;IAElG,OAAOL,MAAM,EAAEM,OAAO,EAAEC,SAAS,GAAGJ,iBAAiB,CAACK,OAAO,GAAGL,iBAAiB,CAACM,GAAG;EACzF;EAEO,OAAOC,eAAe;IACzB,OAAOb,cAAc,CAACC,SAAS,EAAE,KAAKK,iBAAiB,CAACM,GAAG,GAAG,IAAId,mBAAmB,EAAE,GAAG,IAAIC,oBAAoB,EAAE;EACxH;;AAKJ,WAAYO,iBAKX;AALD,WAAYA,iBAAiB;EACzBA,qEAAU;EACVA,2DAAK;EACLA,+DAAO;EACPA,uDAAG;AACP,CAAC,EALWA,iBAAiB,KAAjBA,iBAAiB;AAQ7B,WAAYQ,aAMX;AAND,WAAYA,aAAa;EACrBA,iEAAgD;EAChDA,mEAAkD;EAClDA,8DAA6C;EAC7CA,yDAAwC;EACxCA,4CAA2B;AAC/B,CAAC,EANWA,aAAa,KAAbA,aAAa","names":["StoreServiceImplDev","StoreServiceImplProd","EnviromentUtil","runningAt","getBackgroundPage","chrome","extension","window","RuntimeEnviroment","BACKGROUND","POPUP","runtime","onMessage","CONTENT","WEB","getStoreService","SettingsNames"],"sourceRoot":"","sources":["/home/kovo/Documents/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/utils/enviroment.util.ts"],"sourcesContent":["///<reference types=\"chrome\"/>\n\nimport { StoreService } from \"../services/store.service\";\nimport { StoreServiceImplDev } from \"../services/store.service.impl.dev\";\nimport { StoreServiceImplProd } from \"../services/store.service.impl.prod\";\n\n\nexport class EnviromentUtil {\n\n    public static runningAt() : any {\n        let getBackgroundPage = chrome?.extension?.getBackgroundPage;\n        if (getBackgroundPage){\n            return getBackgroundPage() === window ? RuntimeEnviroment.BACKGROUND : RuntimeEnviroment.POPUP;\n        }\n        return chrome?.runtime?.onMessage ? RuntimeEnviroment.CONTENT : RuntimeEnviroment.WEB;\n    }\n\n    public static getStoreService() : StoreService {\n        return EnviromentUtil.runningAt() === RuntimeEnviroment.WEB ? new StoreServiceImplDev() : new StoreServiceImplProd()\n    }\n\n}\n\n\nexport enum RuntimeEnviroment {\n    BACKGROUND,\n    POPUP,\n    CONTENT,\n    WEB\n}\n\n\nexport enum SettingsNames {\n    AUTO_SUBMIT_RESOURCE_ID = 'autoSubmitResourceId',\n    CHECK_ON_ALL_ENVIROMENTS = 'checkOnAllEnviroments',\n    AVAILABLE_ENVIROMENTS = 'availableEnviromets',\n    CURRENT_ENVIROMENT = 'currentEnviroment',\n    ENVIROMENTS = \"enviroments\",\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
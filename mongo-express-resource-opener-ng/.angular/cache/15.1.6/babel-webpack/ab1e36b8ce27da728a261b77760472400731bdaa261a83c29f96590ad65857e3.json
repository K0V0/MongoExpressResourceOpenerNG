{"ast":null,"code":"/**\n *  This implementation should run on localhost development session or in webpage mode\n*/\nexport class StoreServiceImplDev {\n  load(key) {\n    return new Promise((resolve, reject) => {\n      // if (Object.keys(data).length === 0 && data.constructor === Object) {\n      //     reject('No data returned by localStorage');\n      // } else {\n      //     resolve(data[key]);\n      // }\n      setTimeout(() => {\n        console.log(localStorage.getItem(key));\n        resolve(localStorage.getItem(key));\n      }, 1000);\n    });\n  }\n  save(key, content) {\n    localStorage.setItem(key, content);\n  }\n}","map":{"version":3,"mappings":"AAEA;;;AAIA,OAAM,MAAOA,mBAAmB;EAErBC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC;MACA;MACA;MACA;MACA;MACAC,UAAU,CAAC,MAAK;QACZC,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC,CAAC;QACtCE,OAAO,CAACK,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACN;EAEOS,IAAI,CAACT,GAAW,EAAEU,OAAa;IAClCH,YAAY,CAACI,OAAO,CAACX,GAAG,EAAEU,OAAO,CAAC;EACtC","names":["StoreServiceImplDev","load","key","Promise","resolve","reject","setTimeout","console","log","localStorage","getItem","save","content","setItem"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.dev.ts"],"sourcesContent":["import { StoreService } from \"./store.service\";\n\n/** \n *  This implementation should run on localhost development session or in webpage mode\n*/\n\nexport class StoreServiceImplDev implements StoreService {\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            // if (Object.keys(data).length === 0 && data.constructor === Object) {\n            //     reject('No data returned by localStorage');\n            // } else {\n            //     resolve(data[key]);\n            // }\n            setTimeout(() => { \n                console.log(localStorage.getItem(key));\n                resolve(localStorage.getItem(key));\n            }, 1000);\n        });\n    }\n\n    public save(key: string, content : any) : void {\n        localStorage.setItem(key, content);\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
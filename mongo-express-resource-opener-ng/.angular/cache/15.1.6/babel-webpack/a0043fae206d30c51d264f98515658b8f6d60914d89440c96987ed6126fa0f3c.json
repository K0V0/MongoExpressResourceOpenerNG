{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nexport class EventsUtil {\n  static notifySettingsSaved(result) {\n    this.SETTINGS_SAVED_EMMITER.emit(result);\n  }\n  static getSettingsSavedEmiter() {\n    // true emitted - settings saving sequence start\n    // false emitted - settings saved\n    return this.SETTINGS_SAVED_EMMITER;\n  }\n  static notifySettingsEnviromentsChanged(result) {\n    this.SETTINGS_ENVIROMENTS_CHANGED.emit(this.convertDataSetsNgModelType(result));\n  }\n  static getSettingsEnviromentChangedEmiter() {\n    return this.SETTINGS_ENVIROMENTS_CHANGED;\n  }\n  static convertDataSetsNgModelType(content) {\n    return content === undefined ? undefined : content?.map(x => ({\n      id: x.id,\n      name: x.name\n    }));\n  }\n}\nEventsUtil.SETTINGS_SAVED_EMMITER = new EventEmitter();\nEventsUtil.SETTINGS_ENVIROMENTS_CHANGED = new EventEmitter();","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAQ,eAAe;AAK5C,OAAM,MAAOC,UAAU;EAMZ,OAAOC,mBAAmB,CAACC,MAAgB;IAC9C,IAAI,CAACC,sBAAsB,CAACC,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEO,OAAOG,sBAAsB;IAChC;IACA;IACA,OAAO,IAAI,CAACF,sBAAsB;EACtC;EAEO,OAAOG,gCAAgC,CAACJ,MAA4B;IACvE,IAAI,CAACK,4BAA4B,CAACH,IAAI,CAAC,IAAI,CAACI,0BAA0B,CAACN,MAAM,CAAC,CAAC;EACnF;EAEO,OAAOO,kCAAkC;IAC5C,OAAO,IAAI,CAACF,4BAA4B;EAC5C;EAGQ,OAAOC,0BAA0B,CAACE,OAA6B;IACnE,OAAOA,OAAO,KAAKC,SAAS,GACtBA,SAAS,GACTD,OAAO,EAAEE,GAAG,CAAEC,CAAC,KAAM;MACnBC,EAAE,EAAED,CAAC,CAACC,EAAE;MACRC,IAAI,EAAEF,CAAC,CAACE;KACX,CAAC,CAAC;EACX;;AAhCSf,UAAU,CAEKG,sBAAsB,GAAG,IAAIJ,YAAY,EAAW;AAFnEC,UAAU,CAGKO,4BAA4B,GAAG,IAAIR,YAAY,EAA+B","names":["EventEmitter","EventsUtil","notifySettingsSaved","result","SETTINGS_SAVED_EMMITER","emit","getSettingsSavedEmiter","notifySettingsEnviromentsChanged","SETTINGS_ENVIROMENTS_CHANGED","convertDataSetsNgModelType","getSettingsEnviromentChangedEmiter","content","undefined","map","x","id","name"],"sourceRoot":"","sources":["/home/kovo/Documents/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/utils/events.util.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { DataSetsNgModelRecordFormat, DataSetsNgModelType } from 'src/app/_base/components/_base/data-sets/data-sets.interfaces';\nimport { EnviromentSelectNgModelRecordFormat, EnviromentSelectNgModelType } from './../components/_base/enviroment-select/enviroment-select.interfaces';\n\n\nexport class EventsUtil {\n\n    private static readonly SETTINGS_SAVED_EMMITER = new EventEmitter<boolean>();\n    private static readonly SETTINGS_ENVIROMENTS_CHANGED = new EventEmitter<EnviromentSelectNgModelType>();\n\n\n    public static notifySettingsSaved(result : boolean) : void {\n        this.SETTINGS_SAVED_EMMITER.emit(result);\n    }\n\n    public static getSettingsSavedEmiter() : EventEmitter<boolean> {\n        // true emitted - settings saving sequence start\n        // false emitted - settings saved\n        return this.SETTINGS_SAVED_EMMITER;\n    }\n\n    public static notifySettingsEnviromentsChanged(result : DataSetsNgModelType) : void {\n        this.SETTINGS_ENVIROMENTS_CHANGED.emit(this.convertDataSetsNgModelType(result));\n    }\n\n    public static getSettingsEnviromentChangedEmiter() : EventEmitter<EnviromentSelectNgModelType> {\n        return this.SETTINGS_ENVIROMENTS_CHANGED;\n    }\n\n\n    private static convertDataSetsNgModelType(content : DataSetsNgModelType) : EnviromentSelectNgModelType {\n        return content === undefined \n            ? undefined \n            : content?.map((x) => ({\n                id: x.id,\n                name: x.name\n            }));\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
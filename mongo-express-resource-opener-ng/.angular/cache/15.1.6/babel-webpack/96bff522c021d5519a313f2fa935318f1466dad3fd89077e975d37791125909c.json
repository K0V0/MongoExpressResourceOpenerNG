{"ast":null,"code":"///<reference types=\"chrome\"/>\nimport * as i0 from \"@angular/core\";\n/**\n *  This implementation runs when extension is built and packed\n*/\nexport class StoreServiceImplProd {\n  constructor() {}\n  load(key) {\n    return new Promise((resolve, reject) => {\n      chrome.storage.sync.get(key, data => {\n        if (Object.keys(data).length === 0 && data.constructor === Object) {\n          reject('No data returned by localStorage');\n        } else {\n          resolve(data[key]);\n        }\n      });\n    });\n  }\n  save(key, content) {\n    return new Promise((resolve, reject) => {\n      if (key === undefined || content === undefined) {\n        reject('No data passed to localStorage');\n      } else {\n        chrome.storage.sync.set({\n          [key]: content\n        }).then(result => {\n          resolve(result);\n        });\n      }\n    });\n  }\n}\nStoreServiceImplProd.ɵfac = function StoreServiceImplProd_Factory(t) {\n  return new (t || StoreServiceImplProd)();\n};\nStoreServiceImplProd.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreServiceImplProd,\n  factory: StoreServiceImplProd.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
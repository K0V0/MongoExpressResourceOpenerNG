{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\n// Angular imports\nimport { EventEmitter } from \"@angular/core\";\nimport { isEqual } from 'lodash';\n// My imports\nimport { BaseComponent } from \"src/app/_base/components/_base/base.component\";\nimport { Setting, SettingDecorator } from 'src/app/_base/decorators/setting/setting.decorator';\nimport { StoreServiceImplDev } from 'src/app/_base/services/store.service.impl.dev';\nimport { StoreServiceImplProd } from 'src/app/_base/services/store.service.impl.prod';\nimport { EnviromentUtil, RuntimeEnviroment } from 'src/app/_base/utils/enviroment.util';\nimport { DataSetsSettingDecoratorConverter } from './data-sets.setting.decorator.converter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DataSetsComponent_article_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"article\");\n    i0.ɵɵelement(1, \"input\", 1);\n    i0.ɵɵelementStart(2, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function DataSetsComponent_article_0_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const enviroment_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(enviroment_r1.name = $event);\n    })(\"ngModelChange\", function DataSetsComponent_article_0_Template_input_ngModelChange_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.change());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 3);\n    i0.ɵɵtext(4, \"Odstr\\u00E1ni\\u0165 prostredie\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"textarea\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function DataSetsComponent_article_0_Template_textarea_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const enviroment_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(enviroment_r1.datasets = $event);\n    })(\"ngModelChange\", function DataSetsComponent_article_0_Template_textarea_ngModelChange_6_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.change());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const enviroment_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", \"enviromentId_\" + i_r2)(\"value\", enviroment_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", \"enviromentName_\" + i_r2)(\"ngModel\", enviroment_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", \"enviromentRemove_\" + i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"name\", \"enviromentDatasets_\" + i_r2)(\"ngModel\", enviroment_r1.datasets);\n  }\n}\nexport class DataSetsComponent extends BaseComponent {\n  constructor() {\n    super();\n    this.savingEvent = new EventEmitter();\n    //FIXME dependency injection based on env must exist in angular too\n    this.storeService = EnviromentUtil.runningAt() === RuntimeEnviroment.WEB ? new StoreServiceImplDev() : new StoreServiceImplProd();\n    this.converter = new DataSetsSettingDecoratorConverter();\n  }\n  change() {\n    this.autosave();\n  }\n  //FIXME ugly hack because decorator (or more probably me) is unable to detect change\n  // when properties of object are changed, whole annotation is useful only for primitive types\n  autosave() {\n    let areNotOriginal = !isEqual(this.enviromentsBefore, this.enviroments);\n    if (areNotOriginal) {\n      let context = this;\n      clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        SettingDecorator.getSaveEventEmmiter().emit(true);\n        context.storeService.save('enviroments', context.converter.modelConversion(context.enviroments)).then(result => {\n          SettingDecorator.getSaveEventEmmiter().emit(false);\n        });\n      }, DataSetsComponent.FIRE_TRESHOLD_MILISECONDS);\n    }\n  }\n}\nDataSetsComponent.FIRE_TRESHOLD_MILISECONDS = 1000;\nDataSetsComponent.ɵfac = function DataSetsComponent_Factory(t) {\n  return new (t || DataSetsComponent)();\n};\nDataSetsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataSetsComponent,\n  selectors: [[\"component-data-sets\"]],\n  outputs: {\n    savingEvent: \"savingEvent\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"hidden\", 3, \"name\", \"value\"], [\"type\", \"text\", \"placeholder\", \"N\\u00E1zov prostredia...\", 3, \"name\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"tabindex\", \"-1\", 1, \"disabled\", 3, \"name\"], [\"cols\", \"80\", \"rows\", \"5\", \"placeholder\", \"D\\u00E1tov\\u00E9 zdroje...\", 3, \"name\", \"ngModel\", \"ngModelChange\"]],\n  template: function DataSetsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DataSetsComponent_article_0_Template, 7, 7, \"article\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.enviroments);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"section[_ngcontent-%COMP%]{margin:1.25em 0}article[_ngcontent-%COMP%]{margin:.5em 0}article[_ngcontent-%COMP%]:first-of-type{margin-top:1em}\"]\n});\n__decorate([Setting({\n  defaultValue: [{\n    id: \"enviroment_0\",\n    name: \"Základné prostredie\",\n    datasets: \"http://example.com/data\"\n  }],\n  storeKey: 'enviroments',\n  converter: new DataSetsSettingDecoratorConverter(),\n  onlyDownload: true // will not work either for objects\n}), __metadata(\"design:type\", Object)], DataSetsComponent.prototype, \"enviroments\", void 0);\n__decorate([Setting({\n  defaultValue: [{\n    id: \"enviroment_0\",\n    name: \"Základné prostredie\",\n    datasets: \"http://example.com/data\"\n  }],\n  storeKey: 'enviroments',\n  converter: new DataSetsSettingDecoratorConverter(),\n  onlyDownload: true // will not work either for objects\n}), __metadata(\"design:type\", Object)], DataSetsComponent.prototype, \"enviromentsBefore\", void 0);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
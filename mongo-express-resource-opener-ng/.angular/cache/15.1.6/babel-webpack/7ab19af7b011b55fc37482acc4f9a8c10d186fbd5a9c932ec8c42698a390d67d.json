{"ast":null,"code":"import _defineProperty from \"/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n///<reference types=\"chrome\"/>\nimport * as i0 from \"@angular/core\";\nexport class StoreService {\n  constructor() {}\n  load(key) {\n    return new Promise((resolve, reject) => {\n      chrome.storage.sync.get(key, resolve);\n    });\n  }\n  save(key, content) {\n    console.log('settings save');\n    console.log(content);\n    if (content === undefined) {\n      return;\n    }\n    chrome.storage.sync.set({\n      [key]: content\n    });\n  }\n}\n_defineProperty(StoreService, \"\\u0275fac\", function StoreService_Factory(t) {\n  return new (t || StoreService)();\n});\n_defineProperty(StoreService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreService,\n  factory: StoreService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AAAA;;AAQA,OAAM,MAAOA,YAAY;EAErBC,eAAe;EAERC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnCC,MAAM,CAACC,OAAO,CAACC,IAAI,CAACC,GAAG,CAACP,GAAG,EAAEE,OAAO,CAAC;IACzC,CAAC,CAAC;EACN;EAEOM,IAAI,CAACR,GAAY,EAAES,OAAa;IACnCC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,IAAIA,OAAO,KAAKG,SAAS,EAAE;MACvB;;IAEJR,MAAM,CAACC,OAAO,CAACC,IAAI,CAACO,GAAG,CAAC;MAAE,CAACb,GAAG,GAAGS;IAAO,CAAE,CAAC;EAC/C;;gBAjBSZ,YAAY;mBAAZA,YAAY;AAAA;AAAA,gBAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFR;AAAM","names":["StoreService","constructor","load","key","Promise","resolve","reject","chrome","storage","sync","get","save","content","console","log","undefined","set","factory","providedIn"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.ts"],"sourcesContent":["///<reference types=\"chrome\"/>\n\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n    providedIn : 'root'\n})\nexport class StoreService {\n\n    constructor() {}\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            chrome.storage.sync.get(key, resolve);\n        })\n    }\n\n    public save(key : string, content : any) : void {\n        console.log('settings save');\n        console.log(content);\n        if (content === undefined) {\n            return;\n        }\n        chrome.storage.sync.set({ [key]: content });\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
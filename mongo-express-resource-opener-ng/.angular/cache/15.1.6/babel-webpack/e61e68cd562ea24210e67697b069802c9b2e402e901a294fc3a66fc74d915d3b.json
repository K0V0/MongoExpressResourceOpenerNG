{"ast":null,"code":"import _defineProperty from \"/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nexport class CrateUtil {\n  static getCrate(value) {\n    return new Crate(value);\n  }\n}\nexport class Crate {\n  constructor(value) {\n    _defineProperty(this, \"value\", void 0);\n    this.value = value;\n  }\n}","map":{"version":3,"mappings":";AAAA,OAAM,MAAOA,SAAS;EAEX,OAAOC,QAAQ,CAAMC,KAAW;IACnC,OAAO,IAAIC,KAAK,CAAMD,KAAK,CAAC;EAChC;;AAIJ,OAAM,MAAOC,KAAK;EAGdC,YAAYF,KAAW;IAAA;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB","names":["CrateUtil","getCrate","value","Crate","constructor"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/utils/crate.util.ts"],"sourcesContent":["export class CrateUtil {\n\n    public static getCrate<TYP>(value : TYP) : Crate<TYP> {\n        return new Crate<TYP>(value);\n    } \n\n}\n\nexport class Crate<TYP> {\n    public value : TYP;\n\n    constructor(value : TYP) {\n        this.value = value;\n    }\n\n    // private defineProperty() : void {\n    //     Object.defineProperty(target, propertyKey, {\n    //         get: function() {\n    //             console.log('define property: get');\n    //             return currentValue === undefined ? fieldValue : currentValue;\n    //         },\n    //         set: function(value) {\n    //             console.log('define property: set');\n    //             if (currentValue != value) {\n    //                 currentValue = value;\n    //                 if (uploadAllowed) {\n    //                     let valueToUpload : any;\n    //                     //TODO refucktor\n    //                     if (SettingDecorator.hasParam(params, 'converter') \n    //                             && params['converter']['modelConversion'] !== undefined\n    //                             && params['converter']['modelConversion'](value) !== undefined) {\n    //                         valueToUpload = params['converter']['modelConversion'](value);\n    //                     } else {\n    //                         valueToUpload = value;\n    //                     }\n    //                     // console.log(\"value to upload\");\n    //                     // console.log(valueToUpload);\n    //                     SettingDecorator.storeService.save(settingKey, valueToUpload);\n    //                 }\n    //             }\n    //         },\n    //         configurable: true\n    //     })\n    // }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
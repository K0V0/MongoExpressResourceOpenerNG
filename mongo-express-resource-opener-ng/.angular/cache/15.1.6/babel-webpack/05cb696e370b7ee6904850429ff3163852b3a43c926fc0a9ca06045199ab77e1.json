{"ast":null,"code":"import _defineProperty from \"/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nexport class CrateUtil {\n  static getCrate(value) {\n    return new Crate(value);\n  }\n}\nexport class Crate {\n  constructor(value) {\n    _defineProperty(this, \"value\", void 0);\n    this.value = value;\n  }\n  defineProperty() {\n    Object.defineProperty(target, propertyKey, {\n      get: function () {\n        console.log('define property: get');\n        return currentValue === undefined ? fieldValue : currentValue;\n      },\n      set: function (value) {\n        console.log('define property: set');\n        if (currentValue != value) {\n          currentValue = value;\n          if (uploadAllowed) {\n            let valueToUpload;\n            //TODO refucktor\n            if (SettingDecorator.hasParam(params, 'converter') && params['converter']['modelConversion'] !== undefined && params['converter']['modelConversion'](value) !== undefined) {\n              valueToUpload = params['converter']['modelConversion'](value);\n            } else {\n              valueToUpload = value;\n            }\n            // console.log(\"value to upload\");\n            // console.log(valueToUpload);\n            SettingDecorator.storeService.save(settingKey, valueToUpload);\n          }\n        }\n      },\n      configurable: true\n    });\n  }\n}","map":{"version":3,"mappings":";AAAA,OAAM,MAAOA,SAAS;EAEX,OAAOC,QAAQ,CAAMC,KAAW;IACnC,OAAO,IAAIC,KAAK,CAAMD,KAAK,CAAC;EAChC;;AAIJ,OAAM,MAAOC,KAAK;EAGdC,YAAYF,KAAW;IAAA;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEQG,cAAc;IAClBC,MAAM,CAACD,cAAc,CAACE,MAAM,EAAEC,WAAW,EAAE;MACvCC,GAAG,EAAE;QACDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC,OAAOC,YAAY,KAAKC,SAAS,GAAGC,UAAU,GAAGF,YAAY;MACjE,CAAC;MACDG,GAAG,EAAE,UAASb,KAAK;QACfQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnC,IAAIC,YAAY,IAAIV,KAAK,EAAE;UACvBU,YAAY,GAAGV,KAAK;UACpB,IAAIc,aAAa,EAAE;YACf,IAAIC,aAAmB;YACvB;YACA,IAAIC,gBAAgB,CAACC,QAAQ,CAACC,MAAM,EAAE,WAAW,CAAC,IACvCA,MAAM,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,KAAKP,SAAS,IACpDO,MAAM,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,CAAClB,KAAK,CAAC,KAAKW,SAAS,EAAE;cACpEI,aAAa,GAAGG,MAAM,CAAC,WAAW,CAAC,CAAC,iBAAiB,CAAC,CAAClB,KAAK,CAAC;aAChE,MAAM;cACHe,aAAa,GAAGf,KAAK;;YAEzB;YACA;YACAgB,gBAAgB,CAACG,YAAY,CAACC,IAAI,CAACC,UAAU,EAAEN,aAAa,CAAC;;;MAGzE,CAAC;MACDO,YAAY,EAAE;KACjB,CAAC;EACN","names":["CrateUtil","getCrate","value","Crate","constructor","defineProperty","Object","target","propertyKey","get","console","log","currentValue","undefined","fieldValue","set","uploadAllowed","valueToUpload","SettingDecorator","hasParam","params","storeService","save","settingKey","configurable"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/utils/crate.util.ts"],"sourcesContent":["export class CrateUtil {\n\n    public static getCrate<TYP>(value : TYP) : Crate<TYP> {\n        return new Crate<TYP>(value);\n    } \n\n}\n\nexport class Crate<TYP> {\n    public value : TYP;\n\n    constructor(value : TYP) {\n        this.value = value;\n    }\n\n    private defineProperty() : void {\n        Object.defineProperty(target, propertyKey, {\n            get: function() {\n                console.log('define property: get');\n                return currentValue === undefined ? fieldValue : currentValue;\n            },\n            set: function(value) {\n                console.log('define property: set');\n                if (currentValue != value) {\n                    currentValue = value;\n                    if (uploadAllowed) {\n                        let valueToUpload : any;\n                        //TODO refucktor\n                        if (SettingDecorator.hasParam(params, 'converter') \n                                && params['converter']['modelConversion'] !== undefined\n                                && params['converter']['modelConversion'](value) !== undefined) {\n                            valueToUpload = params['converter']['modelConversion'](value);\n                        } else {\n                            valueToUpload = value;\n                        }\n                        // console.log(\"value to upload\");\n                        // console.log(valueToUpload);\n                        SettingDecorator.storeService.save(settingKey, valueToUpload);\n                    }\n                }\n            },\n            configurable: true\n        })\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
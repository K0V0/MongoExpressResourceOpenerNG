{"ast":null,"code":"/**\n *  This implementation should run on localhost development session or in webpage mode\n*/\nexport class StoreServiceImplDev {\n  load(key) {\n    return new Promise((resolve, reject) => {\n      if (Object.keys(data).length === 0 && data.constructor === Object) {\n        reject('No data returned by localStorage');\n      } else {\n        resolve(data[key]);\n      }\n    });\n  }\n  save(key, content) {}\n}","map":{"version":3,"mappings":"AAEA;;;AAIA,OAAM,MAAOA,mBAAmB;EAErBC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC,IAAIC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,CAACC,MAAM,KAAK,CAAC,IAAID,IAAI,CAACE,WAAW,KAAKJ,MAAM,EAAE;QAC/DD,MAAM,CAAC,kCAAkC,CAAC;OAC7C,MAAM;QACHD,OAAO,CAACI,IAAI,CAACN,GAAG,CAAC,CAAC;;IAE1B,CAAC,CAAC;EACN;EAEOS,IAAI,CAACT,GAAW,EAAEU,OAAa,GAEtC","names":["StoreServiceImplDev","load","key","Promise","resolve","reject","Object","keys","data","length","constructor","save","content"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.dev.ts"],"sourcesContent":["import { StoreService } from \"./store.service\";\n\n/** \n *  This implementation should run on localhost development session or in webpage mode\n*/\n\nexport class StoreServiceImplDev implements StoreService {\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (Object.keys(data).length === 0 && data.constructor === Object) {\n                reject('No data returned by localStorage');\n            } else {\n                resolve(data[key]);\n            }\n        });\n    }\n\n    public save(key: string, content : any) : void {\n\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { DataSetsSettingDecoratorConverter } from './data-sets.setting.decorator.converter';\n// My imports\nimport { BaseComponent } from \"src/app/_base/components/_base/base.component\";\nimport { Setting } from 'src/app/_base/decorators/setting.decorator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DataSetsComponent_article_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"article\");\n    i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2);\n    i0.ɵɵelementStart(3, \"button\", 3);\n    i0.ɵɵtext(4, \"Odstr\\u00E1ni\\u0165 prostredie\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"textarea\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const enviroment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", enviroment_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", enviroment_r1.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(enviroment_r1.datasets);\n  }\n}\nexport class DataSetsComponent extends BaseComponent {}\nDataSetsComponent.ɵfac = /*@__PURE__*/function () {\n  let ɵDataSetsComponent_BaseFactory;\n  return function DataSetsComponent_Factory(t) {\n    return (ɵDataSetsComponent_BaseFactory || (ɵDataSetsComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DataSetsComponent)))(t || DataSetsComponent);\n  };\n}();\nDataSetsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataSetsComponent,\n  selectors: [[\"component-data-sets\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"hidden\", 3, \"value\"], [\"type\", \"text\", \"placeholder\", \"N\\u00E1zov prostredia...\", \"tabindex\", \"-1\", 1, \"disabled\", 3, \"value\"], [\"tabindex\", \"-1\", 1, \"disabled\"], [\"id\", \"dataSets_0\", \"cols\", \"80\", \"rows\", \"5\", \"placeholder\", \"D\\u00E1tov\\u00E9 zdroje...\"]],\n  template: function DataSetsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DataSetsComponent_article_0_Template, 8, 3, \"article\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.enviroments);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"section[_ngcontent-%COMP%]{margin:1.25em 0}article[_ngcontent-%COMP%]{margin:.5em 0}article[_ngcontent-%COMP%]:first-of-type{margin-top:1em}\"]\n});\n__decorate([Setting({\n  defaultValue: [{\n    id: \"enviroment_0\",\n    name: \"Základné prostredie\",\n    datasets: \"http://example.com/data\"\n  }],\n  storeKey: 'enviroments',\n  converter: new DataSetsSettingDecoratorConverter()\n}), __metadata(\"design:type\", Array)], DataSetsComponent.prototype, \"enviroments\", void 0);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
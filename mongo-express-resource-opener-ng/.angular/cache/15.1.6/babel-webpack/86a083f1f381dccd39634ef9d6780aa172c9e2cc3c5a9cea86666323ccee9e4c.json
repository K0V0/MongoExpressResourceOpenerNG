{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/**\n *  This implementation should run on localhost development session or in webpage mode\n*/\nexport class StoreServiceImplDev {\n  load(key) {\n    return new Promise((resolve, reject) => {\n      // timeout set to simulate ngModel problem and chrome storage synce delay\n      setTimeout(() => {\n        console.log(\"get data from browser local storage\");\n        // console.log(localStorage.getItem(key));\n        // resolve(localStorage.getItem(key));\n        resolve(null);\n      }, 1000);\n    });\n  }\n  save(key, content) {\n    return new Promise((resolve, reject) => {\n      // timeout set to simulate ngModel problem and chrome storage synce delay\n      resolve(\"dummy\");\n    });\n  }\n}\nStoreServiceImplDev.ɵfac = function StoreServiceImplDev_Factory(t) {\n  return new (t || StoreServiceImplDev)();\n};\nStoreServiceImplDev.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreServiceImplDev,\n  factory: StoreServiceImplDev.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA;;;AAOA,OAAM,MAAOA,mBAAmB;EAErBC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC;MACAC,UAAU,CAAC,MAAK;QACZC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QAClD;QACA;QACAJ,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACN;EAEOK,IAAI,CAACP,GAAW,EAAEQ,OAAa;IAClC,OAAO,IAAIP,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC;MACAD,OAAO,CAAC,OAAO,CAAC;IACpB,CAAC,CAAC;EACN;;AAnBSJ,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAW,SAAnBX,mBAAmB;EAAAY,YAFf;AAAM","names":["StoreServiceImplDev","load","key","Promise","resolve","reject","setTimeout","console","log","save","content","factory","providedIn"],"sourceRoot":"","sources":["/home/kovo/Documents/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.dev.ts"],"sourcesContent":["// angular imports\nimport { Injectable } from \"@angular/core\";\n\n// my imports\nimport { StoreService } from \"./store.service\";\n\n/** \n *  This implementation should run on localhost development session or in webpage mode\n*/\n\n@Injectable({\n    providedIn : 'root'\n})\nexport class StoreServiceImplDev implements StoreService {\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            // timeout set to simulate ngModel problem and chrome storage synce delay\n            setTimeout(() => {\n                console.log(\"get data from browser local storage\"); \n                // console.log(localStorage.getItem(key));\n                // resolve(localStorage.getItem(key));\n                resolve(null);\n            }, 1000);\n        });\n    }\n\n    public save(key: string, content : any) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            // timeout set to simulate ngModel problem and chrome storage synce delay\n            resolve(\"dummy\");\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
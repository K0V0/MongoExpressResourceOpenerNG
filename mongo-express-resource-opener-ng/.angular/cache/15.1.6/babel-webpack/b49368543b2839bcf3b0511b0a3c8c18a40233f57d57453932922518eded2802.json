{"ast":null,"code":"/**\n *  This implementation should run on localhost development session or in webpage mode\n*/\nexport class StoreServiceImplDev {\n  load(key) {\n    return new Promise((resolve, reject) => {});\n  }\n  save(key, content) {}\n}","map":{"version":3,"mappings":"AAEA;;;AAIA,OAAM,MAAOA,mBAAmB;EAErBC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI,CAEvC,CAAC,CAAC;EACN;EAEOC,IAAI,CAACJ,GAAW,EAAEK,OAAa,GAEtC","names":["StoreServiceImplDev","load","key","Promise","resolve","reject","save","content"],"sourceRoot":"","sources":["/home/matej/Dokumenty/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.dev.ts"],"sourcesContent":["import { StoreService } from \"./store.service\";\n\n/** \n *  This implementation should run on localhost development session or in webpage mode\n*/\n\nexport class StoreServiceImplDev implements StoreService {\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            \n        });\n    }\n\n    public save(key: string, content : any) : void {\n\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
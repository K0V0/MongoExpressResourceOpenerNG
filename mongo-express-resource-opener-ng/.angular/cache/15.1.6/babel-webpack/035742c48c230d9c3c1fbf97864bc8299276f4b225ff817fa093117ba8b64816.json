{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/**\n *  This implementation should run on localhost development session or in webpage mode\n*/\nexport class StoreServiceImplDev {\n  load(key) {\n    return new Promise((resolve, reject) => {\n      if (key !== undefined && key !== null) {\n        this.loadingSimulation(key).then(result => {\n          resolve(result);\n        }).catch(() => reject(\"No data found in localStorage\"));\n      } else {\n        reject(\"No key for data defined\");\n      }\n    });\n  }\n  save(key, content) {\n    return new Promise((resolve, reject) => {\n      if (content !== undefined) {\n        localStorage.setItem(key, JSON.stringify(content));\n        resolve(\"dummy\");\n      } else {\n        reject(\"No data passed into local storage\");\n      }\n    });\n  }\n  handleJsonNull(key) {\n    let result = localStorage.getItem(key);\n    return result === null ? \"{}\" : result;\n  }\n  loadingSimulation(key) {\n    var context = this;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let resultString = context.handleJsonNull(key);\n        resultString !== \"{}\" ? resolve(JSON.parse(resultString)) : reject(\"No data in localStorage\");\n      }, 1000);\n    });\n  }\n}\nStoreServiceImplDev.ɵfac = function StoreServiceImplDev_Factory(t) {\n  return new (t || StoreServiceImplDev)();\n};\nStoreServiceImplDev.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StoreServiceImplDev,\n  factory: StoreServiceImplDev.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA;;;AAOA,OAAM,MAAOA,mBAAmB;EAErBC,IAAI,CAACC,GAAY;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC,IAAIH,GAAG,KAAKI,SAAS,IAAIJ,GAAG,KAAK,IAAI,EAAE;QACnC,IAAI,CAACK,iBAAiB,CAACL,GAAG,CAAC,CACtBM,IAAI,CAAEC,MAAY,IAAI;UAAGL,OAAO,CAACK,MAAM,CAAC;QAAE,CAAC,CAAC,CAC5CC,KAAK,CAAC,MAAML,MAAM,CAAC,+BAA+B,CAAC,CAAC;OAC5D,MAAM;QACHA,MAAM,CAAC,yBAAyB,CAAC;;IAEzC,CAAC,CAAC;EACN;EAEOM,IAAI,CAACT,GAAW,EAAEU,OAAa;IAClC,OAAO,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnC,IAAIO,OAAO,KAAKN,SAAS,EAAE;QACvBO,YAAY,CAACC,OAAO,CAACZ,GAAG,EAAEa,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC,CAAC;QAClDR,OAAO,CAAC,OAAO,CAAC;OACnB,MAAM;QACHC,MAAM,CAAC,mCAAmC,CAAC;;IAEnD,CAAC,CAAC;EACN;EAEQY,cAAc,CAACf,GAAY;IAC/B,IAAIO,MAAM,GAAmBI,YAAY,CAACK,OAAO,CAAChB,GAAG,CAAC;IACtD,OAAOO,MAAM,KAAK,IAAI,GAAG,IAAI,GAAGA,MAAM;EAC1C;EAEQF,iBAAiB,CAACL,GAAY;IAClC,IAAIiB,OAAO,GAAG,IAAI;IAClB,OAAO,IAAIhB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACnCe,UAAU,CAAC,MAAK;QACZ,IAAIC,YAAY,GAAGF,OAAO,CAACF,cAAc,CAACf,GAAG,CAAC;QAC9CmB,YAAY,KAAK,IAAI,GAAGjB,OAAO,CAACW,IAAI,CAACO,KAAK,CAACD,YAAY,CAAC,CAAC,GAAGhB,MAAM,CAAC,yBAAyB,CAAC;MACjG,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACN;;AAtCSL,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAuB,SAAnBvB,mBAAmB;EAAAwB,YAFf;AAAM","names":["StoreServiceImplDev","load","key","Promise","resolve","reject","undefined","loadingSimulation","then","result","catch","save","content","localStorage","setItem","JSON","stringify","handleJsonNull","getItem","context","setTimeout","resultString","parse","factory","providedIn"],"sourceRoot":"","sources":["/home/kovo/Documents/PROJEKTY GitHub/MongoExpressResourceOpenerNG/mongo-express-resource-opener-ng/src/app/_base/services/store.service.impl.dev.ts"],"sourcesContent":["// angular imports\nimport { Injectable } from \"@angular/core\";\n\n// my imports\nimport { StoreService } from \"./store.service\";\n\n/** \n *  This implementation should run on localhost development session or in webpage mode\n*/\n\n@Injectable({\n    providedIn : 'root'\n})\nexport class StoreServiceImplDev implements StoreService {\n\n    public load(key : string) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (key !== undefined && key !== null) {\n                this.loadingSimulation(key)\n                    .then((result : any) => { resolve(result); })\n                    .catch(() => reject(\"No data found in localStorage\"));\n            } else {\n                reject(\"No key for data defined\");\n            } \n        });\n    }\n\n    public save(key: string, content : any) : Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (content !== undefined) {\n                localStorage.setItem(key, JSON.stringify(content));\n                resolve(\"dummy\");\n            } else {\n                reject(\"No data passed into local storage\")\n            }\n        });\n    }\n\n    private handleJsonNull(key : string) : string {\n        let result : string | null = localStorage.getItem(key);\n        return result === null ? \"{}\" : result;\n    }\n\n    private loadingSimulation(key : string) : Promise<any> {\n        var context = this;\n        return new Promise((resolve, reject) => { \n            setTimeout(() => {\n                let resultString = context.handleJsonNull(key);\n                resultString !== \"{}\" ? resolve(JSON.parse(resultString)) : reject(\"No data in localStorage\");\n            }, 1000);\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}